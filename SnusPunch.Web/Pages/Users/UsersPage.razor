@page "/Users"
@using Microsoft.AspNetCore.Components.Authorization
@using SnusPunch.Shared.Models.Snus
@attribute [Authorize]

<PageTitle>SnusPunch - Användare</PageTitle>

<MessageComponent Errors="UserViewModel.Errors" SuccessMessages="UserViewModel.SuccessMessages" IsBusy="UserViewModel.IsBusy" />

<div class="row align-items-center justify-content-between">
    <h2>Användare</h2>
</div>

<SearchSortComponent OnSearch="async () => await GetUsers()" PaginationMetaData="mPaginationMetaData" PaginationParameters="mPaginationParameters" SortProperties="mSortProperties" />


<table>
    <thead>
        <tr>
            <th class="profile-picture-cell"></th>
            <th>Användarnamn</th>
            <th>Favoritsnus</th>
            <th>Vänner</th>
            <th>Snusningar</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var sUser in mUserList)
        {
            <tr>
                <td class="row justify-content-start profile-picture-cell">
                    <a href="@($"Profile/{sUser.UserName}")" class="profile-picture-button">
                        <img class="profile-picture-round" src="@sUser.ProfilePictureUrl" />
                    </a>
                </td>
                <td>@sUser.UserName</td>
                <td>@sUser.FavouriteSnus</td>
                <td>
                    @if(sUser.Friends != -1)
                    {
                        @sUser.Friends
                    }
                    else
                    {
                        <span class="material-symbols--lock"/>
                    }
                </td>
                <td>@sUser.SnusPunches</td>
                <td>
                    <div class="icon-row">
                        @if(sUser.Friend)
                        {
                            <span style="height: 1.5rem; width: 1.5rem" class="mdi--users" title="Ni är vänner!"/>
                        }
                        <AuthorizeView Roles="Admin">
                            <button @onclick="async () => await DeleteUser(sUser)" title="Radera" disabled="@UserViewModel.IsBusy" class="button-icon">
                                <span class="icon-button material-symbols--delete" />
                            </button>
                        </AuthorizeView>
                    </div>
                </td>

            </tr>
        }
    </tbody>
</table>
<div class="mt-1">
    @if (mPaginationMetaData != null)
    {
        <PaginationComponent OnSearch="async () => await GetUsers()" PaginationMetaData="mPaginationMetaData" PaginationParameters="mPaginationParameters" />
    }
</div>