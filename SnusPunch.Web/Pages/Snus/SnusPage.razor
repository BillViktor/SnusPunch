@page "/Snus"
@using Microsoft.AspNetCore.Components.Authorization
@using SnusPunch.Shared.Models.Snus
@attribute [Authorize]

<PageTitle>SnusPunch - Snus</PageTitle>

<MessageComponent Errors="SnusViewModel.Errors" SuccessMessages="SnusViewModel.SuccessMessages" IsBusy="SnusViewModel.IsBusy"/>

<div class="row align-items-center justify-content-between">
    <h2>Snus</h2>
    <AuthorizeView Roles="Admin">
        <button disabled="@SnusViewModel.IsBusy" @onclick="async () => await AddSnus()">
            <span class="align-middle material-symbols--add"/>
            <span class="align-middle"> Lägg till Snus</span>
        </button>
    </AuthorizeView>
</div>

<SearchSortComponent OnSearch="async () => await GetSnus()" PaginationMetaData="mPaginationMetaData" PaginationParameters="mPaginationParameters" SortProperties="mSortProperties" />

<table>
    <thead>
        <tr>
            <th>Namn</th>
            <th>Pris (SEK)</th>
            <th>Portioner</th>
            <th>Vikt (g)</th>
            <th>Nikotinhalt (mg/g)</th>
            <th>Pris (SEK/portion)</th>
            <th>Nikotin (mg/portion)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var sSnus in mSnusList)
        {
            <tr>
                <td>@sSnus.Name</td>
                <td>@sSnus.PriceInSek</td>
                <td>@sSnus.PortionCount</td>
                <td>@sSnus.WeightInGrams</td>
                <td>@sSnus.NicotineInMgPerGram</td>
                <td>@sSnus.PricePerPortion</td>
                <td>@sSnus.NicotinePerPortion</td>
                <td>
                    <div class="icon-row">
                        <button title="@(sSnus.Id == mFavouriteSnusId ? "Detta är ditt favoritsnus!" : "Sätt som favorit")" disabled="@SnusViewModel.IsBusy" @onclick="async () => await SetFavouriteSnus(sSnus)" class="button-icon">
                            <span style="@(sSnus.Id == mFavouriteSnusId ? "color: yellow" : "")" class="ic--baseline-star" />
                        </button>
                        <AuthorizeView Roles="Admin">
                            <button title="Redigera" disabled="@SnusViewModel.IsBusy" @onclick="async () => await EditSnus(sSnus)" class="button-icon">
                                <span class="material-symbols--edit" />
                            </button>
                            <button title="Radera" disabled="@SnusViewModel.IsBusy" @onclick="async () => await DeleteSnus(sSnus)" class="button-icon">
                                <span class="material-symbols--delete" />
                            </button>
                        </AuthorizeView>
                    </div>
                </td>
                
            </tr>
        }
    </tbody>
</table>

<div class="mt-1">
    @if (mPaginationMetaData != null)
    {
        <PaginationComponent OnSearch="async () => await GetSnus()" PaginationMetaData="mPaginationMetaData" PaginationParameters="mPaginationParameters" />
    }
</div>
