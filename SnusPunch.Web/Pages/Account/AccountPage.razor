@page "/Account"
@using Microsoft.AspNetCore.Components.Authorization
@using SnusPunch.Shared.Models.Auth
@using SnusPunch.Shared.Models.Snus
@attribute [Authorize]

<PageTitle>SnusPunch - Konto</PageTitle>

<MessageComponent Errors="AuthViewModel.Errors" SuccessMessages="AuthViewModel.SuccessMessages" IsBusy="AuthViewModel.IsBusy" />

<h2>Ditt konto</h2>

<p>
    <b>Användarnamn: </b> @AuthViewModel.UserInfoModel.UserName
</p>

<p>
    <b>E-postadress: </b> @AuthViewModel.UserInfoModel.Email
    <b style="color: @(AuthViewModel.UserInfoModel.IsEmailConfirmed ? "green" : "red")">(@(AuthViewModel.UserInfoModel.IsEmailConfirmed ? "Verifierad" : "Ej verifierad"))</b>
</p>

<p>
    <b>Vilka kan se dina inlägg:</b> @PrivacySettingHelper.ToString(AuthViewModel.UserInfoModel.EntryPrivacySettingEnum)
</p>

<p>
    <b>Vilka kan se dina vänner:</b> @PrivacySettingHelper.ToString(AuthViewModel.UserInfoModel.FriendPrivacySettingEnum)
</p>

@if(AuthViewModel.UserInfoModel.RoleClaims.Count > 0)
{
    <p>
        <b>Roller: </b> @string.Join(", ", AuthViewModel.UserInfoModel.RoleClaims.Select(x => x.Value))
    </p>
}

<p>
    <b>Favoritsnus: </b> @AuthViewModel.UserInfoModel.FavouriteSnusName
</p>


<h3>Profilbild</h3>
<img class="profile-picture-full-size" style="display: block" src="@AuthViewModel.UserInfoModel.ProfilePictureUrl" />

<InputFile accept=".png,.jpeg,.jpg" @key="mInputFileId" class="mt-1" OnChange="LoadImage" />
<div class="row gap-1">
    <button class="button-warning" @onclick="async () => await AddOrUpdateProfilePicture()">Uppdatera Profilbild</button>
    @if(!AuthViewModel.UserInfoModel.ProfilePictureUrl.Contains("default"))
    {
        <button class="button-danger" @onclick="async () => await DeleteProfilePicture()">Radera Profilbild</button>
    }
</div>
<hr />

<div class="row gap-1">
    @if (!AuthViewModel.UserInfoModel.IsEmailConfirmed)
    {
        <button class="button-success" @onclick="async () => await ResendConfirmationEmail()">Verifiera E-post</button>
    }
    <button class="button-warning" @onclick="async () => await ChangeEmail()">Byt E-post</button>
    <button class="button-warning" @onclick="async () => await ChangePassword()">Byt Lösenord</button>
    <button class="button-warning" @onclick="async () => await PrivacySettings()">Sekretess</button>
    <button class="button-danger" @onclick="async () => await DeleteAccount()">Radera Konto</button>
</div>